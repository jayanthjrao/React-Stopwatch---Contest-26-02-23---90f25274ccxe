import React, { useState, useEffect, useRef } from "react";

function Stopwatch() {
  const [time, setTime] = useState(0);
  const [isRunning, setIsRunning] = useState(false);
  const [laps, setLaps] = useState([]);
  const intervalRef = useRef(null);

  useEffect(() => {
    return () => clearInterval(intervalRef.current);
  }, []);

  const start = () => {
    setIsRunning(true);
    intervalRef.current = setInterval(() => {
      setTime(prevTime => prevTime + 10);
    }, 10);
  };

  const stop = () => {
    setIsRunning(false);
    clearInterval(intervalRef.current);
  };

  const lap = () => {
    const newLap = time.toFixed(3);
    setLaps(prevLaps => [...prevLaps, newLap]);
  };

  const reset = () => {
    setTime(0);
    setLaps([]);
  };

  return (
    <div>
      <h1>{(time / 1000).toFixed(3)}</h1>
      {isRunning ? (
        <button onClick={stop}>STOP</button>
      ) : (
        <button onClick={start}>START</button>
      )}
      <button onClick={lap}>LAP</button>
      <button onClick={reset}>RESET</button>
      <div className={laps.length > 0 ? "lap-section" : "hidden"}>
        <h2>Laps</h2>
        <ul>
          {laps.map((lap, index) => (
            <li key={index}>{lap}</li>
          ))}
        </ul>
      </div>
    </div>
  );
}

export default Stopwatch;
